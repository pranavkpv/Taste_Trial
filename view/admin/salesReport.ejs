<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sales Report</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- DataTables CSS -->
  <link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/dataTables.bootstrap5.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>


  <style>
    .filter-container {
      margin-bottom: 20px;
    }
  </style>
</head>

<body>
  <% if (orders.length==0) { %>
  <h1 class="text-center mt-5">NO Data Found</h1>
  <% } else { %>
  <div class="container mt-5">
    <h2 class="text-center mb-4">Sales Report</h2>

    <!-- Filter Section -->
    <div class="filter-container row g-3">
      <div class="col-md-3">
        <label for="fromDate" class="form-label">From Date:</label>
        <input type="date" id="fromDate" class="form-control" value="<%= fromdate %>">
      </div>
      <div class="col-md-3">
        <label for="toDate" class="form-label">To Date:</label>
        <input type="date" id="toDate" class="form-control" value="<%= todate %>">
      </div>
      <div class="col-md-2">
        <label for="monthFilter" class="form-label">Month:</label>
        <select id="monthFilter" class="form-select" value="<%= month %>">
          <option value="">Select Month</option>
          <option value="01" <%= month === '01' ? 'selected' : '' %>>January</option>
          <option value="02" <%= month === '02' ? 'selected' : '' %>>February</option>
          <option value="03" <%= month === '03' ? 'selected' : '' %>>March</option>
          <option value="04" <%= month === '04' ? 'selected' : '' %>>April</option>
          <option value="05" <%= month === '05' ? 'selected' : '' %>>May</option>
          <option value="06" <%= month === '06' ? 'selected' : '' %>>June</option>
          <option value="07" <%= month === '07' ? 'selected' : '' %>>July</option>
          <option value="08" <%= month === '08' ? 'selected' : '' %>>August</option>
          <option value="09" <%= month === '09' ? 'selected' : '' %>>September</option>
          <option value="10" <%= month === '10' ? 'selected' : '' %>>October</option>
          <option value="11" <%= month === '11' ? 'selected' : '' %>>November</option>
          <option value="12" <%= month === '12' ? 'selected' : '' %>>December</option>
        </select>
      </div>
      <div class="col-md-2">
        <label for="yearFilter" class="form-label">Year:</label>
        <select id="yearFilter" class="form-select">
          <option value="">Select Year</option>
          <option value="2023" <%= year === '2023' ? 'selected' : '' %>>2023</option>
          <option value="2024" <%= year === '2024' ? 'selected' : '' %>>2024</option>
          <option value="2025" <%= year === '2025' ? 'selected' : '' %>>2025</option>
        </select>
      </div>
      <div class="col-md-2 d-flex align-items-end">
        <button class="btn btn-primary w-100" id="applyFilters" onclick="applyFilter()">Apply Filters</button>
      </div>
    </div>

    <!-- Buttons for PDF and Excel -->
    <div class="mb-3">
      <button class="btn btn-success" id="downloadExcel">Download Excel</button>
      <button class="btn btn-danger" id="downloadPDF">Download PDF</button>
    </div>

    <!-- Sales Report Table -->
    <table id="salesReportTable" class="table table-striped table-bordered">
      <thead>
        <tr>
          <th>Date</th>
          <th>Customer Name</th>
          <th>Invoice No.</th>
          <th>Description</th>
          <th>DR</th>
          <th>CR</th>
        </tr>
      </thead>
      <tbody>
        <% orders.forEach(element => { %>
        <tr>
          <td><%= element.formattedCreatedAt %></td>
          <td><%= element.userDetails[0].firstname %> <%= element.userDetails[0].lastname %></td>
          <td>#<%= element._id %></td>
          <td>Purchase Amount</td>
          <td><%= element.totalAmount %></td>
          <td>0</td>
        </tr>
        <% if (element.totalOffer>0) { %>
        <tr>
          <td><%= element.formattedCreatedAt %></td>
          <td><%= element.userDetails[0].firstname %> <%= element.userDetails[0].lastname %></td>
          <td>#<%= element._id %></td>
          <td>Offer Amount</td>
          <td>0</td>
          <td><%= element.totalOffer %></td>
        </tr>

        <% } %>
        <% if (element.couponDetails.length>0) { %>
        <tr>
          <td><%= element.formattedCreatedAt %></td>
          <td><%= element.userDetails[0].firstname %> <%= element.userDetails[0].lastname %></td>
          <td>#<%= element._id %></td>
          <td>Coupon Amount</td>
          <td>0</td>
          <td><%= (element.totalAmount-element.totalOffer)*element.couponDetails[0].discount_per/100 %></td>
        </tr>
        <% } %>
        <% }) %>
        <!-- Add more rows as needed -->
      </tbody>
      <tfoot>
        <tr>
          <td colspan="4" class="text-end"><strong>Total:</strong></td>
          <td id="totalDR"><%= sum[0].totalAmount %></td>
          <td id="totalCR"><%= offersum[0].totalOffer +couponSum %>
        </tr>
      </tfoot>
    </table>
  </div>
  <% } %>


  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <!-- DataTables JS -->
  <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/1.13.5/js/dataTables.bootstrap5.min.js"></script>
  <!-- DataTables Export Buttons -->
  <script src="https://cdn.datatables.net/buttons/2.4.0/js/dataTables.buttons.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.0/jszip.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/2.4.0/js/buttons.html5.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/2.4.0/js/buttons.print.min.js"></script>
  <script>
    document.getElementById("downloadExcel").addEventListener("click", function () {
      // Get the table element
      const table = document.getElementById("salesReportTable");

      // Get the filter values
      const fromDate = document.getElementById("fromDate").value;
      const toDate = document.getElementById("toDate").value;
      const month = document.getElementById("monthFilter").value;
      const year = document.getElementById("yearFilter").value;

      // Define an array of month names
      const monthNames = [
        "", // Placeholder for zero-index (not used)
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
      ];

      // Determine the report title based on filter values
      let title = "Sales Report"; // Default title
      if (fromDate === toDate) {
        title = `Sales Report - ${ fromDate }`;
      } else if (!month && !year) {
        title = `Sales Report - ${ fromDate } to ${ toDate }`;
      } else if (!year && month) {
        title = `Sales Report - ${ monthNames[parseInt(month, 10)] }`;
      } else if (!month && year) {
        title = `Sales Report - ${ year }`;
      } else if (month && year) {
        title = `Sales Report - ${ year } (${ monthNames[parseInt(month, 10)] })`;
      }

      // Convert the table to a worksheet
      const worksheet = XLSX.utils.table_to_sheet(table);

      // Add the title row at the top of the worksheet
      XLSX.utils.sheet_add_aoa(worksheet, [[title]], { origin: "A1" });

      // Adjust the data range to include the title row
      const range = XLSX.utils.decode_range(worksheet["!ref"]);
      range.e.r += 1; // Extend the range by 1 row
      worksheet["!ref"] = XLSX.utils.encode_range(range);

      // Merge cells for the title row
      worksheet["!merges"] = worksheet["!merges"] || [];
      worksheet["!merges"].push({
        s: { r: 0, c: 0 }, // Start at row 0, column 0
        e: { r: 0, c: range.e.c }, // End at row 0, last column of the table
      });

      // Optional styling for the title row
      worksheet["A1"].s = {
        font: { bold: true, sz: 14 }, // Bold font, size 14
        alignment: { horizontal: "center" } // Center alignment
      };

      // Create a new workbook and append the worksheet
      const workbook = XLSX.utils.book_new();
      XLSX.utils.book_append_sheet(workbook, worksheet, "Sales Report");

      // Generate Excel file and trigger download
      XLSX.writeFile(workbook, "Sales_Report.xlsx");
    });




    document.getElementById("downloadPDF").addEventListener("click", function () {
      const { jsPDF } = window.jspdf; // Initialize jsPDF
      const doc = new jsPDF();
      const fromDate = document.getElementById('fromDate').value
      const toDate = document.getElementById('toDate').value
      const month = document.getElementById('monthFilter').value
      const year = document.getElementById('yearFilter').value

      const monthNames = [
        "", // Placeholder for zero-index (not used)
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
      ];
      // Add a title to the 
      
      if (fromDate === toDate) {
        doc.text(`Sales Report - ${ fromDate }`, 14, 10);
      } else if (!month && !year) {
        doc.text(`Sales Report - ${ fromDate } to ${ toDate }`, 14, 10);
      } else if (!year && month) {
        doc.text(`Sales Report - ${monthNames[parseInt(month, 10)]}`, 14, 10);
      } else if (!month && year) {
        doc.text(`Sales Report - ${year}`, 14, 10);
      } else if (month && year) {
        doc.text(`Sales Report - ${year}(${monthNames[parseInt(month, 10)]})`, 14, 10);
      }
      

      // Get the table element
      const table = document.getElementById("salesReportTable");


      // Generate the PDF from the table
      doc.autoTable({
        html: table, // Use the table element as the source
        startY: 20,  // Vertical offset for the table
        styles: {
          fontSize: 10, // Font size
          cellPadding: 3, // Cell padding
        },
        headStyles: {
          fillColor: [40, 167, 69], // Custom color for the header row (Bootstrap success color)
        },
      });

      // Download the PDF
      doc.save("Sales_Report.pdf");
    });

    function applyFilter() {
      const fromDate = document.getElementById('fromDate').value
      const toDate = document.getElementById('toDate').value
      const month = document.getElementById('monthFilter').value
      const year = document.getElementById('yearFilter').value
      window.location.href = `/admin/salesReport?fromdate=${ fromDate }&todate=${ toDate }&month=${ month }&year=${ year }`
    }
  </script>


</body>

</html>