<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
  body {
    overflow-x: hidden;
  }

  .password-form {
    max-width: 500px;
    margin: 2rem auto;
    padding: 2rem;
    border-radius: 15px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    background: white;
  }

  .form-header {
    background: linear-gradient(45deg, #4e73df, #224abe);
    color: white;
    padding: 1.5rem;
    border-radius: 10px 10px 0 0;
    margin: -2rem -2rem 2rem -2rem;
  }

  .input-group {
    position: relative;
    margin-bottom: 1.5rem;
    gap: 50px;

  }

  .form-control {
    padding: 0.75rem;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    transition: all 0.3s ease;
  }

  .form-control:focus {
    border-color: #4e73df;
    box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
  }

  .input-group-text {
    cursor: pointer;
    background: transparent;
    border: none;
    padding-left: 1rem;
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    z-index: 10;
  }

  .input-group-text:hover {
    color: #4e73df;
  }

  .password-strength {
    height: 5px;
    margin-top: 0.5rem;
    border-radius: 3px;
    transition: all 0.3s ease;
  }

  .submit-btn {
    background: linear-gradient(45deg, #4e73df, #224abe);
    border: none;
    padding: 0.75rem;
    font-weight: 600;
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
  }

  .submit-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(78, 115, 223, 0.4);
  }

  .requirements {
    font-size: 0.85rem;
    color: #666;
    margin-top: 0.5rem;
  }

  .requirement-item {
    margin-bottom: 0.25rem;
  }

  .requirement-item i {
    margin-right: 0.5rem;
  }

  .valid {
    color: #28a745;
  }

  .invalid {
    color: #dc3545;
  }

  .nav-links a.changePassword {
    background: #34495e;
    border-left: 3px solid #3498db;
  }
</style>
`
<%- include('partials/userheader') %>
<div class="row">
  <div class="col-md-2 menu">
    <%- include('partials/profileside') %>
  </div>

  <div class="col-md-10 ">
    <div class="password-form" style="margin-top:100px">
      <div class="form-header">
        <h4 class="mb-0"><i class="fas fa-lock me-2"></i>Change Password</h4>
      </div>
      <form id="passwordForm">
        <div class="input-group">
          <label class="form-label">Current Password</label>
          <input type="password"  class="form-control" id="currentPassword">
          <span class="input-group-text password-toggle">
            <i class="far fa-eye"></i>
          </span>
        </div>
        <p class="text-danger" id="hiddencupassword"></p>

        <div class="input-group">
          <label class="form-label">New Password <span class="text-white">xx</span></label>
          <input type="password"  class="form-control" id="newPassword" >
          <span class="input-group-text password-toggle">
            <i class="far fa-eye"></i>
          </span>
        </div>
        <p class="text-danger" id="hiddenNpassword"></p>


        <div class="input-group">
          <label class="form-label">Confirm Password</label>
          <input type="password"  class="form-control" id="confirmPassword" >
          <span class="input-group-text password-toggle">
            <i class="far fa-eye"></i>
          </span>
        </div>
        <p class="text-danger" id="hiddenCopassword"></p>


        <button type="submit" class="btn btn-primary w-100 submit-btn">
          <i class="fas fa-key me-2"></i>Update Password
        </button>
      </form>
    </div>
  </div>
</div>


<%- include('partials/userfooter') %>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Toggle password visibility
    document.querySelectorAll('.password-toggle').forEach(toggle => {
      toggle.addEventListener('click', function () {
        const input = this.previousElementSibling;
        const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
        input.setAttribute('type', type);
        this.innerHTML = type === 'password'
          ? '<i class="far fa-eye"></i>'
          : '<i class="far fa-eye-slash"></i>';
      });
    });

    // Password strength checker
    const newPassword = document.getElementById('newPassword');
    const requirements = document.querySelectorAll('.requirement-item');
    const strengthBar = document.querySelector('.password-strength');

    function checkPasswordStrength(password) {
      const checks = [
        password.length >= 8,
        /[A-Z]/.test(password),
        /[0-9]/.test(password),
        /[^A-Za-z0-9]/.test(password)
      ];

      checks.forEach((check, index) => {
        const icon = requirements[index].querySelector('i');
        requirements[index].classList.toggle('valid', check);
        requirements[index].classList.toggle('invalid', !check);
        icon.className = check ? 'fas fa-check valid' : 'fas fa-times invalid';
      });

      const strength = checks.filter(Boolean).length;
      const colors = ['#dc3545', '#ffc107', '#28a745'];
      strengthBar.style.width = `${ (strength / 4) * 100 }%`;
      strengthBar.style.backgroundColor = colors[strength - 1] || '#dc3545';
    }

    newPassword.addEventListener('input', () => checkPasswordStrength(newPassword.value));

    // Form validation
    document.getElementById('passwordForm').addEventListener('submit', async function (e) {
      e.preventDefault();

      const currentPassword = document.getElementById('currentPassword').value;
      const newPassword = document.getElementById('newPassword').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      const response = await fetch('/user/changepassword', {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ currentPassword, newPassword, confirmPassword })
      })
      const data = await response.json()
      if (data.wrongPassword) {
        Swal.fire({
          title: "Wrong",
          icon: "warning",
          text:data.wrongPassword,
          draggable: true
        });
      }
      if(data.notMatch){
        Swal.fire({
          title: "Not Match",
          icon: "warning",
          text:data.notMatch,
          draggable: true
        });
      }
      if(data.passwordFormat){
        Swal.fire({
          title: "Format wrong",
          icon: "warning",
          text:data.passwordFormat,
          draggable: true
        });
      }
      if(data.nocontent){
        Swal.fire({
          title: "No content",
          icon: "info",
          text:data.nocontent,
          draggable: true
        });
      }
      if(data.success){
        Swal.fire({
          title: "Success",
          icon: "success",
          text:data.success,
          draggable: true,
          timer:3000
        }).then(()=>{
        e.target.submit()
      })
      }
    })
  });
</script>
</body>

</html>