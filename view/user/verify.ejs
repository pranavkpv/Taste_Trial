<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OTP Verification</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    body {
      background-color: #f8f9fa;
    }

    .otp-container {
      max-width: 400px;
      margin: 50px auto;
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 8px;
      background-color: #fff;
      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    .resend-btn.disabled {
      color: #aaa;
      pointer-events: none;
    }

    .timer {
      font-weight: bold;
      color: #dc3545;
    }
  </style>
</head>

<body>
  <form action="/user/verifypost" method="post">
    <div class="otp-container">
      <h3 class="text-center mb-3">OTP Verification</h3>
      <p class="text-center text-muted">Enter the OTP sent to your email.</p>
      <div class="d-flex justify-content-center mb-3">
        <input type="text" id="enteredOTP" name="Otp" class="form-control text-center w-50">
      </div>
      <div class="d-grid gap-2">
        <button class="btn btn-primary" id="verify" type="submit">Verify</button>
      </div>
      <div class="text-center mt-3">
        <span>Resend OTP in <span class="timer" id="timer">30</span> seconds</span><br>

        <button id="resendButton" type="button" class="btn btn-secondary w-100">Resend
          OTP</button>
      </div>
    </div>
  </form>

  <script>
    let timeLeft = 30;
    let timerInterval;

    const timerElement = document.getElementById("timer");
    const resendButton = document.getElementById("resendButton");

    // Start Timer Function
    const startTimer = () => {
      timeLeft = 30; // Reset the timer
      resendButton.classList.add("disabled"); // Disable the resend button
      timerElement.textContent = timeLeft; // Update the timer display

      // Clear any existing interval
      if (timerInterval) clearInterval(timerInterval);

      // Start a new timer
      timerInterval = setInterval(() => {
        if (timeLeft > 0) {
          timeLeft--;
          timerElement.textContent = timeLeft;
        } else {
          clearInterval(timerInterval);
          resendButton.classList.remove("disabled"); // Enable the resend button
        }
      }, 1000);
    };


    // // OTP Verification
    document.getElementById("verify").addEventListener('click', () => {
      const enteredOTP = document.getElementById("enteredOTP").value;
      const actualotp = document.getElementById("actualotp").value;
      if (enteredOTP !== actualotp) {
        Swal.fire({
          icon: "error",
          title: "Invalid OTP Please Try Again"
        });
      } })

    startTimer();

   //resendOTP
   document.getElementById('resendButton').addEventListener('click', async () => {
    try {
      const response = await fetch('/user/resend', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ userId: 'USER_ID_HERE' }), // Pass any necessary data
      });

      const result = await response.json();
      if (response.ok) {
        alert('OTP resent successfully!');
      } else {
        alert(`Error: ${result.message || 'Failed to resend OTP'}`);
      }
    } catch (error) {
      console.error('Error resending OTP:', error);
    }
  });
  </script>




  <% if (errormessage && errormessage.length > 0 ) { %>
    <script>
      Swal.fire({
        text: "<%= errormessage %>",
        icon: "error"
      });
    </script>
  <% } %>

  <% if (successmessage && successmessage.length > 0) { %>
    <script>
      Swal.fire({
        text: "<%= successmessage %>",
        icon: "success"
      });
    </script>
  <% } %>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
